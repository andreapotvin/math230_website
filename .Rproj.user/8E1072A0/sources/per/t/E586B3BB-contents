---
title: "Spotify"
description: |
  This section is a story of the Spotify Tracks Dataset through visualization and narrative. This dataset includes 114k Spotify tracks and looks at 21 variables for each. For this story we are going to be looking at one specific genre of music tracks and at the 'duration_ms', 'loudness', 'explicit', 'time signature', and 'liveness' variables to see if/how these are associated with track 'popularity'.
---

```{r, echo = FALSE}
# Custom Theme
AmpedTones = c("#1DB954", "#984EA3", "#0095b9", "#F78C8C", "#2E5A88",
               "#A83854", "#E69F00", "#CC79A7", "#F0E442", "#D55E00")
```

* 'popularity' is a value between 0 and 100 with 100 being most popular. The popularity score is calculated by an algorithm and is based on the total number of plays the track has had and how recent those plays are
* 'duration_ms' is the track length in milliseconds, but this was converted to be in minutes
* 'loudness' is the overall loudness of a track in decibels (dB)
* 'explicit' is whether or not the track has explicit lyrics
* 'time_signature' is an estimated time signature based on the time signature (meter) which is a notational convention to specify how many beats are in each bar (or measure) 
* 'liveness' is measuring the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live

***
# Spotify Track Genres

In the U.S. pop, country, electronic, folk, hip hop, indie, rnb, and rock music are some of the most popular genres.

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```
```{r, echo = FALSE}
library(ggplot2)
Spotify = read.csv("dataset.csv", header = TRUE)
```
```{r, echo = FALSE}
#Cleaning Data
Spotify$explicit = factor(Spotify$explicit, levels = c("False", "True"))
Spotify$mode = factor(Spotify$mode, levels = c("0", "1"), labels = c("Minor", "Major"))
Spotify$track_genre = factor(Spotify$track_genre)
Spotify$key = factor(Spotify$key)
Spotify$time_signature = factor(Spotify$time_signature,
                                levels = c("0", "1", "2", "3", "4"),
                                labels = c("3/4", "4/4", "5/4", "6/4", "7/4"))
```
```{r, echo = FALSE}
#Create Pop Dataset
Pop = Spotify[Spotify$track_genre == "pop", ]
attach(Pop)
```
```{r}
#Data Sets
hipHop = Spotify[Spotify$track_genre == "hip-hop", ]
rock = Spotify[Spotify$track_genre == "rock", ]
country = Spotify[Spotify$track_genre == "country", ]
rnb = Spotify[Spotify$track_genre == "country", ]
electronic = Spotify[Spotify$track_genre == "electronic", ]
indie = Spotify[Spotify$track_genre == "indie", ]
folk = Spotify[Spotify$track_genre == "folk", ]
```

<iframe src="https://abby-flynt.shinyapps.io/potvin/" class="l-screen-inset shaded" height="1000px"></iframe>

This interactive histogram allows you to view the distribution of popularity score of the tracks from 8 of the most popular genres in the U.S. from the 125 genres included in this data set. Based on these distributions notice how pop tracks have the largest mean popularity score with a mean popularity score of 47.60. This indicates that pop is the most popular genre out of the listed popular U.S. genres. Looking at the distribution of popularity score for pop tracks more closely, the distribution has an interquartile range of 69 which is based on the spread of the middle 50% of the popularity scores. This higher value tells us that the popularity scores of pop tracks are more spread out, which is evident when looking at the distribution. Even though there are over 300 tracks with a popularity score of under around 12, majority of the tracks have a popularity score of over around 60 which leads to this higher mean score. Because pop tracks lead in overall listening numbers and have the greatest mean popularity score I decided to look into possible influential factors that make pop music popular.

***
# Pop

### Artists
```{r, echo = FALSE, results='hide'}
# Graph 6 ~ Bar chart
#mean popularity per artist
artist_means = aggregate(popularity ~ artists, data = Pop, FUN = mean, na.rm = TRUE)

ordered_artists = artist_means[order(-artist_means$popularity), ]

top10_artists = head(ordered_artists, 10)

artist_scores = setNames(top10_artists$popularity, top10_artists$artists)
artist_scores = sort(artist_scores, decreasing = TRUE)

artist_names_sorted = names(artist_scores)

densities = rep(c(10, 20, 30, 40, 50), length.out = 10)
angles = rep(c(45, 90), length.out = 10)

par(mar = c(5, 12, 4, 2))

boxplot = barplot(rev(artist_scores), horiz = TRUE, col = rev(AmpedTones),
                  density = densities, 
                  angle = angles, names.arg = rev(artist_names_sorted), 
                  main = "Top 10 Artists by Mean Popularity Score", 
                  xlab = "Mean Popularity Score", las = 1, 
                  xlim = c(0, max(artist_scores) + 10))

text(x = rev(artist_scores) + 0.1, y = boxplot, labels = round(rev(artist_scores), 1), 
     cex = 0.8, pos = 4)
```
### Top 10 Tracks
##### (Based on popularity score)
```{r, echo = FALSE, results='hide'}
#Top 10 track names with highest popularity score 
top10_tracks = Pop[order(-Pop$popularity), ][1:10, ]
top10_tracks[, c("track_name", "artists", "popularity")]
```
1. Unholy (feat. Kim Petras) by Sam Smith & Kim Petras (100)

2. I'm Good (Blue) by David Guetta & Bebe Rexha (98)

3. Under The Influence by Chris Brown (96)

4. I Ain't Worried by OneRepublic (96)

5. As It Was by Harry Styles (95)

6. Glimpse of Us by Joji (94)

7. Sweater Weather by The Neighbourhood (93)

8. Another Love by Tom Odell (93)

9. Left and Right (Feat. Jung Kook of BTS) by Charlie Puth, Jung Kook, & BTS (92)

10. Calm Down (with Selena Gomez) by Rema & Selena Gomez (92)

***
Above we can see the top 10 pop artists and the top 10 pop songs based on track popularity score. But what factors influence their popularity score?

***
### Exploring the Specifics of Pop

```{r, echo = FALSE}
# Graph 2 ~ Hexbin Plot
hexplotColors = c("#1DB954", "#0095b9", "#984EA3")

ggplot(Pop, aes(x = duration_ms/60000, y = popularity)) +
  geom_hex(bins = 30) +
  scale_fill_gradientn(colors = hexplotColors) +  
  labs(title = "Popularity Given Track Duration", x = "Track Length (In Minutes)",
       y = "Popularity", fill = "Track Count") +
  theme_light()
```
This hexbin plot allows us to see that the length of a pop track tends to cover a similar range of lengths regardless of the tracks popularity score. However, tracks with a popularity score above 50 cover a larger range of lengths, from 1 minute to 9.77 minutes, while tracks with a popularity score below 50 cover a smaller range from 1.79 minutes to 6.85 minutes. Tracks with a popularity score above 50 do not have a clear length that contains the greatest number of tracks but the blue shades in the cluster (higher track count) indicate that a common length for these tracks is 3.4 minutes. The mean track length of these tracks is 3.8 minutes. On the other hand tracks with a popularity score below 50 have a clear length that contains the greatest number of tracks. The purple bin tells us that a high number (over 60 tracks) of low popularity score tracks have a length of around 3 minutes. The mean track length of these tracks is 3.46 minutes. Therefore, pop tracks with a popularity score greater than 50 tend to have a slightly longer length than pop tracks with a popularity score less than 50.

***
```{r, echo = FALSE, results='hide'}
# Download ggtrace
install.packages("ggtrace")
library(ggtrace)
```
```{r, echo = FALSE}
# Graph 3 ~ ggtrace
traceColors = c("#1DB954", "#A83854")

ggplot(Pop, aes(loudness, popularity, color = explicit)) +
  geom_point_trace(trace_position = popularity > 50, fill = "white",
                   background_params = list(color = NA, fill = "grey")) +
  labs(title = "Popularity Given Track Loudness\n & Whether It Is Explicit",
       x = "Track Loudness (In Decibels)",
       y = "Popularity", color = "Explicit?",
       subtitle = "(Tracks with Popularity Above 50)") +
  scale_color_manual(values = traceColors) +
  theme_light()

ggplot(Pop, aes(loudness, popularity, color = explicit)) +
  geom_point_trace(trace_position = popularity < 50, fill = "white",
                   background_params = list(color = NA, fill = "grey")) +
  labs(title = "Popularity Given Track Loudness\n & Whether It Is Explicit",
       x = "Track Loudness (In Decibels)",
       y = "Popularity", color = "Explicit?",
       subtitle = "(Tracks with Popularity Below 50)") +
  scale_color_manual(values = traceColors) +
  theme_light()
```

Negative decibel (dB) values are used to express the level of a signal relative to a reference level. As the value gets more negative this means that the loudness of the track is getting more quieter than the reference level. So, the less negative values indicate a track with a greater loudness. Based on these scatter plots we can see that the range of loudness of the pop tracks (in dB) is different for pop tracks with lower and greater popularity scores. Tracks with a popularity score above 50 have a range of loudness from -20.65 to -1.1 while tracks with a popularity score below 50 have a range of loudness from -15.16 to -2.02. But, the mean loudness for tracks with a popularity score above 50 is -6.92 and the mean loudness for tracks with a popularity score below 50 is -7.03. Overall, the mean loudness for the pop tracks is around -7 dB. So, because the values are so close for both groups, there is not a significant difference in track loudness in relation to the popularity score of the track.

Additionally, from these scatter plots we can see that overall there are more pop tracks that are not explicit than explicit, 926 not explicit and 74 explicit. This is also true when looking at both tracks with a popularity score below 50 and tracks with a popularity score above 50 separately. Tracks with a popularity score above 50 are made up of 595 non explicit and 49 explicit tracks (7.61% explicit) and tracks with a popularity score below 50 are made up of 331 non explicit and 25 explicit tracks (7.02% explicit). So, we can see that whether a pop track is explicit or not does not affect the tracks popularity score.

***
```{r, echo = FALSE}
# Graph 4 ~ Violin Plot
ggplot(Pop, aes(x = as.factor(time_signature), y = popularity)) +
  geom_violin(fill = "#1DB954") +
  geom_boxplot(alpha = .2) +
  labs(title = "Track Popularity Given Time Signature", 
       x = "Time Signature (Beats per Bar/Measure)", y = "Popularity") +
  theme_light()
```
A song's time signature determines the rhythmic structure by specifying the number of beats in each measure and the type of note that receives one beat, it defines the underlying pulse and rhythmic grouping of the track. Although 9 pop tracks are NA and do not have recorded time signatures, the popularity score of the remaining pop tracks differ by popularity score. 892 of the pop tracks have a time signature of 7/4 beats per measure. Next, 73 pop tracks have a time signature of 6/4 beats per measure. Lastly, 26 pop tracks have a time signature of 4/4 beats per measure. For 4/4 beats per measure the range of popularity score is 0 to 80, however the mean popularity score is 8.62. For 6/4 beats per measure the range of popularity score is 0 to 94 and the mean popularity score is 56.04. Lastly, for 7/4 beats per measure the range of popularity score is 0 to 100 and the mean popularity score is 47.88. Although majority of pop tracks have a time signature of 7/4, by looking at the mean popularity scores for each time signature we can see that pop tracks with a time signature of 6/4 tend to have a slightly higher popularity score.

***
```{r, echo = FALSE}
# Graph 5 ~ Contour Plot
ggplot(Pop, aes(x = liveness, y = popularity)) +
  stat_density_2d(aes(fill = after_stat(level)), geom = "polygon", color = "grey") +
  labs(title = "Track Popularity Given Liveness", 
       x = "Liveness", y = "Popularity", fill = "Density\n Level") +
  scale_fill_gradient(low = "#1DB954", high = "#2E5A88") +
  theme_light()
```
The liveness value of the track looks at the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. Tracks with a popularity score above 50 have a minimum liveness value of 0.02, a maximum liveness value of 0.68, and a mean liveness value of 0.156. Tracks with a popularity score below 50 have a minimum liveness value of 0.04, a maximum liveness value of 0.77, and a mean liveness value of 0.162. The range of liveness for the two groups is only slightly different and the mean liveness value for the two groups is almost the same. Therefore, this density contour plot shows that the presence of an audience in the recording tends to be the same for tracks with a popularity score above 50 and tracks with a popularity score below 50. So, liveness does not have an effect on the popularity score of a pop track.

***
### Overall
This analysis of pop tracks in the Spotify dataset reveals that while pop music leads in popularity overall, the specific factors examined (track duration, loudness, explicit content, time signature, and liveness) have limited or no strong association with a track's popularity score. We found that pop tracks with higher popularity scores tend to be slightly longer and louder, while on the other hand, explicit content and liveness show no clear influence on popularity. Interestingly, tracks with a 6/4 time signature have the highest average popularity score despite being less common. Overall, some traits may correlate slightly with pop track popularity but they do not determine it. This suggests that pop track popularity is likely influenced by a broader set of factors, which could include listener behavior, promotion, and cultural trends.